{"version":3,"sources":["components/mappicker.js","App.js","index.js"],"names":["google_top","geocoder","timeoutVar","map","loader","Loader","Title","styled","div","MapBox","AddrDiv","ConfirmButton","button","BottomDiv","DelLocDiv","MapText","ShotIcon","loaded","Mappicker","React","useState","lat","lng","latlng","setlatlng","address","setaddress","geocodeLatLng","geocode","location","then","response","results","formatted_address","window","alert","catch","e","load","google","maps","Geocoder","Map","document","getElementById","center","zoom","disableDefaultUI","addListener","clearTimeout","setTimeout","getCenter","id","onClick","navigator","geolocation","getCurrentPosition","position","LatLng","coords","latitude","longitude","panTo","setZoom","App","geohash","require","console","log","encode","latlon","decode","b","decode_bbox","n","neighbors","className","ReactDOM","render","StrictMode"],"mappings":"oLA2HIA,EACAC,EACAC,EACAC,E,mGAvHEC,EAAS,IAAIC,IAAO,0CADK,IAGzBC,EAAQC,IAAOC,IAAV,sNAWLC,EAASF,IAAOC,IAAV,4HAQNE,EAAUH,IAAOC,IAAV,mGAMPG,EAAgBJ,IAAOK,OAAV,iRAebC,EAAYN,IAAOC,IAAV,6QAcTM,EAAYP,IAAOC,IAAV,mGAMTO,EAAUR,IAAOC,IAAV,isBAwCPQ,EAAWT,IAAOC,IAAV,4KAaVS,GAAS,EAME,SAASC,IACpB,MAA4BC,IAAMC,SAAS,CAAEC,IAAK,SAAUC,IAAK,WAAjE,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BL,IAAMC,SAAS,IAA7C,mBAAOK,EAAP,KAAgBC,EAAhB,KA4BA,SAASC,EAAcN,EAAKC,GACxBrB,EACK2B,QAAQ,CAAEC,SAAU,CAAER,IAAKA,EAAKC,IAAKA,KACrCQ,MAAK,SAACC,GACCA,EAASC,QAAQ,GAEjBN,EAAWK,EAASC,QAAQ,GAAGC,mBAE/BC,OAAOC,MAAM,uBAGpBC,OAAM,SAACC,GAAD,OAAOH,OAAOC,MAAM,2BAA6BE,MAchE,OAjDKpB,GACDb,EAAOkC,OAAOR,MAAK,SAAUS,GAEzBtC,EAAW,IADXD,EAAauC,GACaC,KAAKC,UAC/BtC,EAAM,IAAIoC,EAAOC,KAAKE,IAAIC,SAASC,eAAe,OAAQ,CACtDC,OAAQtB,EACRuB,KAAM,GACNC,kBAAkB,KAGlBC,YAAY,kBAAkB,WAC1B9C,GAAY+C,aAAa/C,GAC7BA,EAAagC,OAAOgB,YAAW,WAC3B,IAAI7B,EAAMlB,EAAIgD,YAAY9B,MACtBC,EAAMnB,EAAIgD,YAAY7B,MAC1BE,EAAU,CAAEH,IAAKA,EAAKC,IAAKA,IAC3BI,EAAW,eACXC,EAAcN,EAAKC,KACpB,QAEPL,GAAS,KA8Bb,gCACI,gCACI,cAACX,EAAD,yBACA,cAACG,EAAD,CAAQ2C,GAAG,MAAX,eACA,eAACrC,EAAD,WACI,gEACA,6EAIR,cAACC,EAAD,UAAU,wBAAQqC,QAtB1B,WACI3B,EAAW,kBACX4B,UAAUC,YAAYC,oBAAmB,SAAUC,GAC/C,IAAIZ,EAAS,IAAI7C,EAAWwC,KAAKkB,OAAOD,EAASE,OAAOC,SAAUH,EAASE,OAAOE,WAClF1D,EAAI2D,MAAMjB,GACV1C,EAAI4D,QAAQ,IACZvC,EAAU,CAAEH,IAAKoC,EAASE,OAAOC,SAAUtC,IAAKmC,EAASE,OAAOE,YAChEnC,EAAW,eACXC,EAAcJ,EAAOF,IAAKE,EAAOD,SAcvB,SAA+B,cAAC,IAAD,QAEzC,eAACT,EAAD,WAEI,cAACC,EAAD,yCACA,eAACJ,EAAD,WAAS,cAAC,IAAD,IAAee,KAExB,cAACd,EAAD,qCClKDqD,MAnCf,WACE,IAAIC,EAAUC,EAAQ,IACtBC,QAAQC,IAAIH,EAAQI,OAAO,QAAS,WACpC,IAAIC,EAASL,EAAQM,OAAO,aAC5BJ,QAAQC,IAAIE,EAAOV,UACnBO,QAAQC,IAAIE,EAAOT,WAInB,IAAIW,EAAIP,EAAQQ,YAAY,aAExBC,EAAIT,EAAQU,UAAU,SAiB1B,OAPAR,QAAQC,IAAI,aACZD,QAAQC,IAAIM,GAIZP,QAAQC,IAAII,GAGV,qBAAKI,UAAU,MAAf,SACE,cAAC1D,EAAD,OC7BNiD,QAAQC,IAAI,MACZS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,W","file":"static/js/main.425da7f7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Loader, LoaderOptions } from 'google-maps';\r\nimport styled from 'styled-components';\r\nimport { BiCurrentLocation } from 'react-icons/bi';\r\nimport { GrLocation } from 'react-icons/gr';\r\n\r\nconst options: LoaderOptions = { /* todo */ };\r\nconst loader = new Loader('AIzaSyA89Ry51DT28yrjSGJHGe9-zTYLCZO0zCY', options);\r\n\r\nconst Title = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    padding: 0.25em;\r\n    // margin: 0.5em;\r\n    text-align: center;\r\n    color: #550394;\r\n    height: 50px;\r\n    background-color: #eee;\r\n`;\r\n\r\nconst MapBox = styled.div`\r\n    position: absolute;\r\n    top: 50px;\r\n    bottom: 150px;\r\n    width: 100%;\r\n    z-index: 0;\r\n`;\r\n\r\nconst AddrDiv = styled.div`\r\n    font-weight: bold;\r\n    font-size: 1.1em;\r\n    padding-top:0.5em;\r\n`;\r\n\r\nconst ConfirmButton = styled.button`\r\n    width: 90%;\r\n    left: 5%;\r\n    height: 40px;\r\n    position: absolute;\r\n    margin-top: 10px;\r\n    bottom: 15px;\r\n    font-size: 12px;\r\n    Font-weight: bold;\r\n    border-radius: 8px;\r\n    color: #fff;\r\n    \r\n    background-color: #550394;\r\n`;\r\n\r\nconst BottomDiv = styled.div`\r\n    position: absolute;\r\n    font-size: 13px;\r\n    width: 100%;\r\n    height: 150px;\r\n    bottom: 0;\r\n    background-color: #eee;\r\n\r\n    div{\r\n        padding-left: 0.75em;\r\n        padding-right: 0.75em;\r\n        padding-top: 0.5em;\r\n    }\r\n`;\r\nconst DelLocDiv = styled.div`\r\n    color: #969595;\r\n    font-weight: bold;\r\n    font-size: 12px;\r\n    `;\r\n\r\nconst MapText = styled.div`\r\nclear: both;\r\nbackground: #000;\r\nborder-radius: 8px;\r\ncolor: #fff;\r\n// display: inline-block;\r\nfont-size: 0.7em;\r\nfont-weight: bold;\r\npadding: 6px;\r\nline-height: 1em;\r\nmargin: 0 auto;\r\nmargin-top: -89px; // high precision stuff\r\ntop:50%;\r\nleft:55%; // high precision stuff\r\nmargin-left:-100px;\r\nposition: absolute;\r\ntext-align: center;\r\npointer-events: none;\r\nvertical-align: top;\r\nmin-width: 7em;\r\n\r\n&:after {\r\n    border: 1em solid transparent;\r\n\tborder-top-color: #000;\r\n\tcontent: '';\r\n\tmargin-left: -1em;\r\n\tposition: absolute;\r\n\ttop: 90%;\r\n\tleft: 50%;\r\n\twidth: 0;\r\n\theight: 0;\r\n  }\r\n\r\nspan{\r\n    font-size: 0.9em;\r\n    color: #c2c2c2;\r\n    font-weight: normal;\r\n}\r\n`;\r\n\r\nconst ShotIcon = styled.div`\r\n  position: absolute;\r\n  bottom: 170px;\r\n  right: 10px;\r\n\r\n  button {\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    \r\n  }\r\n`;\r\n\r\nvar loaded = false;\r\nvar google_top;\r\nvar geocoder;\r\nvar timeoutVar;\r\nlet map;\r\n\r\nexport default function Mappicker() {\r\n    const [latlng, setlatlng] = React.useState({ lat: 10.61878, lng: 76.21538 });\r\n    const [address, setaddress] = React.useState('');\r\n\r\n\r\n\r\n    if (!loaded) {\r\n        loader.load().then(function (google) {\r\n            google_top = google;\r\n            geocoder = new google_top.maps.Geocoder();\r\n            map = new google.maps.Map(document.getElementById('map'), {\r\n                center: latlng,\r\n                zoom: 10,\r\n                disableDefaultUI: true,\r\n            });\r\n\r\n            map.addListener(\"center_changed\", () => {\r\n                if (timeoutVar) clearTimeout(timeoutVar);\r\n                timeoutVar = window.setTimeout(() => {\r\n                    var lat = map.getCenter().lat();\r\n                    var lng = map.getCenter().lng();\r\n                    setlatlng({ lat: lat, lng: lng });\r\n                    setaddress('updating...');\r\n                    geocodeLatLng(lat, lng)\r\n                }, 500);\r\n            });\r\n            loaded = true;\r\n        });\r\n    }\r\n\r\n    function geocodeLatLng(lat, lng) {\r\n        geocoder\r\n            .geocode({ location: { lat: lat, lng: lng } })\r\n            .then((response) => {\r\n                if (response.results[0]) {\r\n\r\n                    setaddress(response.results[0].formatted_address);\r\n                } else {\r\n                    window.alert(\"No results found\");\r\n                }\r\n            })\r\n            .catch((e) => window.alert(\"Geocoder failed due to: \" + e));\r\n    }\r\n\r\n    function pickLocation() {\r\n        setaddress('Please wait...');\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            var center = new google_top.maps.LatLng(position.coords.latitude, position.coords.longitude);\r\n            map.panTo(center);\r\n            map.setZoom(18);\r\n            setlatlng({ lat: position.coords.latitude, lng: position.coords.longitude });\r\n            setaddress('updating...');\r\n            geocodeLatLng(latlng.lat, latlng.lng);\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Title>HyperLocal</Title>\r\n                <MapBox id=\"map\" > </MapBox>\r\n                <MapText>\r\n                    <div> Order will be delivered here</div>\r\n                    <span>Place the pin accurately on the map</span>\r\n                </MapText>\r\n            </div>\r\n\r\n            <ShotIcon><button onClick={pickLocation}><BiCurrentLocation /></button></ShotIcon>\r\n\r\n            <BottomDiv >\r\n\r\n                <DelLocDiv> SELECT DELIVERY LOCATION </DelLocDiv>\r\n                <AddrDiv><GrLocation />{address}</AddrDiv>\r\n\r\n                <ConfirmButton >CONFIRM LOCATION</ConfirmButton>\r\n            </BottomDiv >\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport Mappicker from './components/mappicker';\n\n\nfunction App() {\n  var geohash = require('ngeohash');\n  console.log(geohash.encode(37.8324, 112.5584));\n  var latlon = geohash.decode('ww8p1r4t8');\n  console.log(latlon.latitude);\n  console.log(latlon.longitude);\n\n  // home = t9yhmvxpx\n\n  var b = geohash.decode_bbox('ww8p1r4t8');\n\n  var n = geohash.neighbors('t9yhm');\n  // t9yhm\n  // t9yht\n  // t9yhw\n  // t9yhq\n  // t9yhn\n  // t9yhj\n  // t9yhh\n  // t9yhk\n  // t9yhs\n  console.log(\"neighbors\");\n  console.log(n);\n  // n.map(function (item) {\n  //   console.log(item);\n  // });\n  console.log(b);\n\n  return (\n    <div className=\"App\">\n      <Mappicker></Mappicker>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconsole.log(\"hi\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}